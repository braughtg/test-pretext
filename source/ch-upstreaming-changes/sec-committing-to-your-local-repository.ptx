<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="topic-committing-to-your-local-repository" xmlns:xi="http://www.w3.org/2001/XInclude" >
  <title>Committing to Your Local Repository</title>

  <introduction>
    <p>
      In this section you will do the work necessary to commit the changes made to your <em>Local Files</em> to your local repository.
      The process of committing changes is illustrated in <xref ref="fig-committing-changes" />.
    </p>
  </introduction>

  <p>
    <figure xml:id="fig-committing-changes">
      <caption> Committing changes. </caption>
      <image source="images/ch-upstreaming-changes/committing-changes.png" width="75%">
        <description>
          Committing Changes.
        </description>
      </image>
    </figure>
  </p>

  <exercises>
  <title/>
  <exercise xml:id="ex-meaningful-commit-messages" label="ex-meaningful-commit-messages">
    <introduction>
      <p>
        As you saw earlier when looking at the output of <c>git log</c>, each commit has a commit message that briefly describes the changes that are contained in the commit.
        These messages should be concise but meaningful without requiring the reader to refer to the ticket in the issue tracker.
        A future reader of the <c>git log</c> output should be able to obtain an idea of the changes you have made and why you made them by reading your commit messages.
      </p>

      <p>
        For each of the following issues, order the given commit messages from best (listed first) to worst (listed last).
      </p>
    </introduction>


    <task xml:id="ex-meaningful-commit-messages-a" label="ex-meaningful-commit-messages-a">
      <statement>
        <p>
          Issue: The documentation says “bug” instead of “bugs” where plural is needed.
        </p>
      </statement>
      <blocks> <block order="1">
      <p>
        Pluralize bug (i.e.
        bugs) for clarity
      </p>
      </block> <block order="2">

      <p>
        Fix issue #123
      </p>
      </block> <block order="3">

      <p>
        Fix typo
      </p>
      </block> </blocks>

      <hint>
        <p>
          Commit messages should be as specific as possible regarding the changes made.
          Something like "fix typo" is too generic as it can apply to lots of different changes.
        </p>
      </hint>
    </task>


    <task xml:id="ex-meaningful-commit-messages-b" label="ex-meaningful-commit-messages-b">
      <statement>
        <p>
          Issue: The harvesting log should be able to track insect presence.
        </p>
      </statement>
      <blocks> <block order="1">
      <p>
        Add tracking for insects in harvesting logs
      </p>
      </block> <block order="2">

      <p>
        Insect tracking added
      </p>
      </block> <block order="3">

      <p>
        Extend harvest logs
      </p>
      </block> </blocks>

      <hint>
        <p>
          Commit messages should be as specific as possible regarding the changes made.
          Which of the messages provides information about what is added and where?
        </p>
      </hint>
    </task>
  </exercise>

  <exercise xml:id="ex-committing-changes" label="ex-committing-changes">
    <statement>
      <p>
        The <c>git commit -m "&lt;message&gt;"</c> command commits all of the staged files to the currently active branch with the specified commit message.
      </p>

      <p>
        Write a <c>git commit</c> command for the change you made in the space below.
        Be sure to include a meaningful message.
      </p>

      <p>
        <var width="55" />
      </p>
    </statement>
    <setup> <var> <condition string='^git commit -m ["].+["]$'>
    <feedback>
      <p>
        Thank you.
        Your command is in the proper format, please make sure the commit message is meaningful.
      </p>
    </feedback>
    </condition> <condition string=".*">

    <feedback>
      <p>
        Double check the format of your command.
        You need to include " " around the text of the message.
      </p>
    </feedback>
    </condition> </var> </setup>
  </exercise>

  <exercise xml:id="ex-committing-changes-new-a" label="ex-committing-changes-new-a">
    <statement>
      <p>
        Use the <c>git commit</c> command you wrote in <xref ref="ex-committing-changes"/> to commit your staged changes to your local repository with a meaningful commit message.
      </p>

      <p>
        Look at the output produced.
      </p>
    </statement>


    <choices randomize="yes">
      <choice correct="yes">
        <statement>
          <p>
            It shows the name of the file changed in [].
          </p>
        </statement>

        <feedback>
          <p>
            The first part of the first line is the name of the file.
          </p>
        </feedback>
      </choice>

      <choice correct="yes">
        <statement>
          <p>
            It shows the SHA code of the commit in [].
          </p>
        </statement>

        <feedback>
          <p>
            The second part of the first line is the SHA code of the commit.
          </p>
        </feedback>
      </choice>

      <choice correct="yes">
        <statement>
          <p>
            It shows the commit message.
          </p>
        </statement>

        <feedback>
          <p>
            The last part of the first line is the commit message.
          </p>
        </feedback>
      </choice>

      <choice correct="yes">
        <statement>
          <p>
            It shows the number of files changed.
          </p>
        </statement>

        <feedback>
          <p>
            The first part of the second line is the number of files changed.
          </p>
        </feedback>
      </choice>

      <choice correct="yes">
        <statement>
          <p>
            It shows the number of lines inserted.
          </p>
        </statement>

        <feedback>
          <p>
            The second part of the second line is the number of lines inserted.
          </p>
        </feedback>
      </choice>

      <choice correct="yes">
        <statement>
          <p>
            It shows the number of lines deleted.
          </p>
        </statement>

        <feedback>
          <p>
            The last part of the second line is the number of lines deleted.
          </p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>
            It shows every line that was inserted and/or deleted.
          </p>
        </statement>

        <feedback>
          <p>
            The output should not show the individual line changes, rather a summary of the changes.
          </p>
        </feedback>
      </choice>
    </choices>

    <hint>
      <p>
        There should be two lines of output.
        The first will provide 3 different pieces of information.
        The second provides what additional information?
      </p>
    </hint>
  </exercise>

  <exercise xml:id="ex-committing-changes-new-ex" label="ex-committing-changes-new-ex">
    <task xml:id="ex-committing-changes-b" label="ex-committing-changes-b">
      <statement>
        <p>
          Now use the <c>git status</c> command again.
          Compare your output to the output in <xref ref="ex-verify-changes-new-a" />.
          What two changes have occurred that reflect that your changes have been staged?
        </p>
      </statement>


      <choices>
        <choice correct="yes">
          <statement>
            <p>
              No files appear listed as modified in red (meaning they are unstaged).
            </p>
          </statement>
        </choice>

        <choice>
          <statement>
            <p>
              No files appear listed as modified in green (meaning they are staged).
            </p>
          </statement>
        </choice>

        <choice>
          <statement>
            <p>
              The output states "nothing to commit".
            </p>
          </statement>
        </choice>

        <choice correct="yes">
          <statement>
            <p>
              All of the above.
            </p>
          </statement>
        </choice>
      </choices>
    </task>


    <task xml:id="ex-committing-changes-c" label="ex-committing-changes-c">
      <statement>
        <p>
          How do you know your changes have been committed?
        </p>
      </statement>


      <choices>
        <choice correct="yes">
          <statement>
            <p>
              Option 1
            </p>
          </statement>

          <feedback>
            <p>
              Feedback 1
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              Option 2
            </p>
          </statement>

          <feedback>
            <p>
              Feedback 2
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              Option 3
            </p>
          </statement>

          <feedback>
            <p>
              Feedback 3
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              Option 4
            </p>
          </statement>

          <feedback>
            <p>
              Feedback 4
            </p>
          </feedback>
        </choice>
      </choices>

      <hint>
        <p>
          Hint here
        </p>
      </hint>
    </task>


    <task xml:id="ex-committing-changes-d" label="ex-committing-changes-d">
      <statement>
        <p>
          Use the <c>git log</c> command to show the 3 most recent commits to your branch.
          Refer back to your output from <xref ref="ex-understanding-project-history-new-aa"/>.
        </p>
      </statement>


      <choices>
        <choice correct="yes">
          <statement>
            <p>
              Option 1
            </p>
          </statement>

          <feedback>
            <p>
              Feedback 1
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              Option 2
            </p>
          </statement>

          <feedback>
            <p>
              Feedback 2
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              Option 3
            </p>
          </statement>

          <feedback>
            <p>
              Feedback 3
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              Option 4
            </p>
          </statement>

          <feedback>
            <p>
              Feedback 4
            </p>
          </feedback>
        </choice>
      </choices>

      <hint>
        <p>
          Hint here
        </p>
      </hint>
    </task>


    <task xml:id="ex-committing-changes-e" label="ex-committing-changes-e">
      <statement>
        <p>
          Switch to your <c>main</c> branch.
          What command did you use?
        </p>
      </statement>


      <choices randomize="yes">
        <choice>
          <statement>
            <p>
              <c>git status</c>
            </p>
          </statement>

          <feedback>
            <p>
              <c>git status</c> shows what files have been changed and staged.
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              <c>git stage main</c>
            </p>
          </statement>

          <feedback>
            <p>
              <c>git stage main</c> is not a proper command.
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              <c>git branch main</c>
            </p>
          </statement>

          <feedback>
            <p>
              <c>git branch main</c> would try to create a new branch named <c>main</c>.
            </p>
          </feedback>
        </choice>

        <choice correct="yes">
          <statement>
            <p>
              <c>git switch main</c>
            </p>
          </statement>

          <feedback>
            <p>
              Correct!
            </p>
          </feedback>
        </choice>
      </choices>

      <hint>
        <p>
          To change the active branch you need to switch to it.
        </p>
      </hint>
    </task>


    <task xml:id="ex-committing-changes-f" label="ex-committing-changes-f">
      <statement correct="no">
        <p>
          The output of the <c>git log</c> command now shows the information about the commit you made.
        </p>
      </statement>
      <hint>
        <p>
          What branch are you on, the <c>main</c> branch our your feature branch? In which branch did you make your changes?
        </p>
      </hint>
    </task>


    <task xml:id="ex-committing-changes-g" label="ex-committing-changes-g">
      <statement>
        <p>
          The commit is not shown in the <c>git log</c> output because:
        </p>
      </statement>
      
      <choices>
        <choice correct="yes">
          <statement>
            <p>
              You are on the <c>main</c> branch and the commit is on the feature branch.
            </p>
          </statement>

          <feedback>
            <p>
              Correct!
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              You are on the feature branch and the commit is on the <c>main</c> branch.
            </p>
          </statement>

          <feedback>
            <p>
              You should be on the <c>main</c> branch.
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              The <c>git status</c> command should be used to show the commits.
            </p>
          </statement>

          <feedback>
            <p>
              The <c>git status</c> command is used to see what files have been changed and staged.
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              It only shows the first commit made, not every commit.
            </p>
          </statement>

          <feedback>
            <p>
              The <c>git log</c> command will show multiple commits with the most recent appearing first.
            </p>
          </feedback>
        </choice>
      </choices>

      <hint>
        <p>
          Commits are specific to branches. You must be on the proper branch to see a commit.
        </p>
      </hint>
    </task>
  </exercise>
  </exercises>
</section>
