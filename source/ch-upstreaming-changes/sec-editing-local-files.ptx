<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="topic-editing-local-files" xmlns:xi="http://www.w3.org/2001/XInclude" >
  <title>Editing Local Files</title>

  <introduction>
    <p>
      In the last two sections you created a feature branch and switched to that branch.
      In this section you will edit your local files to fix the issue that you claimed in the issue tracker.
      Confirm you are on your feature branch now.
    </p>
  </introduction>

  <exercises>
  <title/>
  <exercise xml:id="ex-claimed-issue-url" label="ex-claimed-issue-url">
    <statement>
      <p>
        In order to make the changes to the appropriate local file, you will need to review the issue that you claimed.
      </p>

      <p>
        Provide the URL to the issue that you claimed in the issue tracker.
      </p>

      <p>
        <var width="55" />
      </p>
    </statement>
    <setup> <var> <condition string="^https://github.com/.+/issues/[0-9]+$">
    <feedback>
      <p>
        Thank you.
      </p>
    </feedback>
    </condition> <condition string=".*">

    <feedback>
      <p>
        Make sure you have pasted the complete URL starting with https and ending with the issue number.
      </p>
    </feedback>
    </condition> </var> </setup> <!-- THIS REG EX NEEDS TO VERIFY THE ISSUE NUMBER IS BETWEEN 1 AND 35 -->
  </exercise>

  <exercise xml:id="ex-locate-claimed-issue" label="ex-locate-claimed-issue">
    <introduction>
      <p>
        Read the issue that you claimed.
        To make the requested change you will need to open the file.
        Click <em>&lt;Code&gt;</em> to see the files in the repository.
        Use the issue to locate the file.
        Once you have found it, click on it to open it.
      </p>
    </introduction>

    <statement>
      <p>
        In which file will you be making changes to address your issue? Hint: Look at the text of your issue in the issue tracker.
        Be careful to use the same capitalization as given in the issue.
      </p>

      <p>
        <var width="55" />
      </p>
    </statement>
    <setup> <var> <condition string="^ONBOARDING.md|CONTRIBUTING.md|LICENSE.md|INSTALL.md|README.md|AUTHORS.md$">
    <feedback>
      <p>
        Thank you.
      </p>
    </feedback>
    </condition> <condition string=".*">

    <feedback>
      <p>
        Double check the spelling of the file name, that the name is ALL CAPS, the .md at the end of the file name is included and in lower case.
      </p>
    </feedback>
    </condition> </var> </setup>
  </exercise>
  <!--
  <exercise xml:id="ex-locate-claimed-issue-a" label="ex-locate-claimed-issue-a">
    <statement>
      <p>
        In which file will you be making changes to address your issue? Hint: Look at the text of your issue in the issue tracker.
      </p>
    </statement>
    <response />
  </exercise>

  <exercise xml:id="ex-locate-claimed-issue-b" label="ex-locate-claimed-issue-b">
    <statement>
      <p>
        Use a text editor to modify the file you identified in <xref ref="ex-locate-claimed-issue-a" /> so that the issue you claimed has been fixed.
        Be sure to save your changes.
      </p>
    </statement>
  </exercise>
  -->
  <p>
    <xref ref="fig-edit-local-files-on-feature-branch" />  illustrates the current situation where your <em>Local Files</em> have been modified. In <xref ref="fig-switch-to-feature-branch" /> the <em>Local Files</em> in your feature branch were drawn in green. This reflected that they were, at that time, an exact copy of the last commit on the main branch, which was also drawn in green.  Here <em>Local Files</em> are drawn in blue to indicate that they have been changed as compared to the final commit in the main branch, which is still green.
  </p>

  <p>
    <figure xml:id="fig-edit-local-files-on-feature-branch">
      <caption> Editing Local Files on a Feature Branch. </caption>
      <image source="images/ch-upstreaming-changes/edit-local-files-on-feature-branch.png" width="75%">
        <description>
          Editing local files on a feature branch.
        </description>
      </image>
    </figure>
  </p>

  <exercise xml:id="ex-verify-changes" label="ex-verify-changes">
    <introduction>
      <p>
        The <c>git status</c> command can now be used to check that your changes have been made.
        Run the <c>git status</c> command now.
      </p>

      <p>
        If you see the message "nothing to commit, working tree clean", it means that your edits in the previous exercise were not saved.
        Go back and save your edits and then issue the <c>git status</c> command again before answering the questions below.
      </p>
    </introduction>


    <task xml:id="ex-verify-changes-new-a" label="ex-verify-changes-new-a">
      <statement>
        <p>
          Paste the output of the <c>git status</c> command below.
        </p>
      </statement>
      <response />
    </task>


    <task xml:id="ex-verify-changes-a" label="ex-verify-changes-a">
      <statement>
        <p>
          How many files are not staged?
        </p>
      </statement>


      <choices>
        <choice>
          <statement>
            <p>
              0
            </p>
          </statement>

          <feedback>
            <p>
              Perhaps you didn't save your change.
              Try editing the file again and make sure you save it.
            </p>
          </feedback>
        </choice>

        <choice correct="yes">
          <statement>
            <p>
              1
            </p>
          </statement>

          <feedback>
            <p>
              Correct! The file you changed has been modified but not staged yet.
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              2
            </p>
          </statement>

          <feedback>
            <p>
              Did you change more than 1 file by accident? Verify that you only changed the file specified in your issue.
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              Cannot be determined from the output provided by the <c>git status</c> command.
            </p>
          </statement>

          <feedback>
            <p>
              The <c>git status</c> command will show you all unstaged and staged files.
            </p>
          </feedback>
        </choice>
      </choices>

      <hint>
        <p>
          Not staged means a file has been modified but not added to the commit.
        </p>
      </hint>
    </task>


    <task xml:id="ex-verify-changes-b" label="ex-verify-changes-b">
      <statement>
        <p>
          How many files are added to the commit?
        </p>
      </statement>


      <choices>
        <choice correct="yes">
          <statement>
            <p>
              0
            </p>
          </statement>

          <feedback>
            <p>
              Correct! You have not added any files to the stage yet.
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              1
            </p>
          </statement>

          <feedback>
            <p>
              Unless you already issued the <c>git add</c> command you shouldn't have any files ready to be committed.
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              2
            </p>
          </statement>

          <feedback>
            <p>
              Unless you already issued the <c>git add</c> command you shouldn't have any files ready to be committed.
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              Cannot be determined from the output provided by the <c>git status</c> command.
            </p>
          </statement>

          <feedback>
            <p>
              The <c>git status</c> command will show you all unstaged and staged files.
            </p>
          </feedback>
        </choice>
      </choices>

      <hint>
        <p>
          If a file has been modified but not added it will not be part of the commit.
        </p>
      </hint>
    </task>
  </exercise>

  <exercise xml:id="ex-verify-changes-with-diff" label="ex-verify-changes-with-diff">
    <statement>
      <p>
        The <c>git diff</c> command provides another way to examine or confirm the changes you have been making.
        Note <em>diff</em> is just short for <em>difference</em>, and is called this because it is used to show differences.
        By default the <c>git diff</c> command will show you any changes that have been made to your local files that have not yet been staged.
        Run the <c>git diff</c> command now.
      </p>

      <p>
        How is the change that you made indicated in the output from <c>git diff</c>?
      </p>
    </statement>


    <choices randomize="yes">
      <choice>
        <statement>
          <p>
            The new text is in red, the old text is in green.
          </p>
        </statement>

        <feedback>
          <p>
            Look again to see what color your change appears in.
          </p>
        </feedback>
      </choice>

      <choice correct="yes">
        <statement>
          <p>
            The new text is in green, the old text is in red.
          </p>
        </statement>

        <feedback>
          <p>
            Correct! The original text is in red, your changes are in green.
          </p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>
            Only the new text appears.
          </p>
        </statement>

        <feedback>
          <p>
            Look again, you should see the original text as well.
          </p>
        </feedback>
      </choice>

      <choice>
        <statement>
          <p>
            The old text appears with a strike-through line across it.
          </p>
        </statement>

        <feedback>
          <p>
            Strike-through is not part of the feedback git commands can provide.
          </p>
        </feedback>
      </choice>
    </choices>

    <hint>
      <p>
        Look at the feedback again and look for your change.
        Do you also see the original text?
      </p>
    </hint>
  </exercise>
  </exercises>
</section>
