<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="topic-creating-a-pull-request" xmlns:xi="http://www.w3.org/2001/XInclude" >
  <title>Creating a Pull Request</title>

  <introduction>
    <p>
      A <term>pull request</term> is the mechanism by which you ask the maintainers of a project to consider merging your changes into the upstream <c>main</c> branch.
    </p>
  </introduction>

  <exercises>
  <title />
  <p>
    As shown in <xref ref="fig-pull-request" />, a pull request is made from your origin repository, which must contain your feature branch, to the upstream repository.
    In the last section, you pushed your feature branch to your origin repository, so you are now ready to make a pull request.
  </p>

  <p>
    <figure xml:id="fig-pull-request" >
      <caption> Making a Pull Request. </caption>
      <image source="images/ch-upstreaming-changes/pull-request.png" width="75%">
        <description>
          Cloud image of the state of the repository when making a pull request.
        </description>
      </image>
    </figure>
  </p>

  <exercise xml:id="ex-pull-request" label="ex-pull-request">
    <introduction>
      <p>
        There are a number of different ways to make a pull request in GitHub.
        In general, they are all equivalent and it won’t matter which one you use.
        The following steps will walk you through one of those ways.
      </p>
    </introduction>


    <task xml:id="ex-pull-request-a" label="ex-pull-request-a">
      <statement>
        <p>
          When you first push a feature branch GitHub assumes that you are likely to make a pull request for it.
          To make this easy it will automatically display a big green “Compare &amp; pull request” button at the top of the page for your origin repository.
        </p>

        <p>
          <image source="images/ch-upstreaming-changes/compare-pull-request.png" width="30%">
            <description>
              GitHub compare and pull request button image.
            </description>
          </image>
        </p>

        <p>
          Click that button.
          You will use the page that appears to create your pull request.
        </p>
      </statement>
    </task>


    <task xml:id="ex-pull-request-b" label="ex-pull-request-b">
      <introduction>
        <p>
          A gray bar similar to the one shown below should appear at the top of the page.
        </p>

        <p>
          <image source="images/ch-upstreaming-changes/repository-branch-bar.png" width="100%">
            <description>
              Image of the GitHub bar showing the repository and branch for the pull request.
            </description>
          </image>
        </p>

        <p>
          This bar specifies the repositories and branches that are involved in the pull request.
          That is, they indicate which branch you are requesting to be pulled from which repository and to which branch in which repository you would like it to be merged.
        </p>

        <p>
          Note that the specific information that you see in your browser will be different than what is shown above.
        </p>

        <p>
          The questions in this exercise will help you to better understand what this information means.
        </p>
      </introduction>
      <!--
      <task xml:id="ex-pull-request-b-i" label="ex-pull-request-b-i">
        <introduction>
          <p>
            Copy the URLs from the gray bar into the textboxes below.
          </p>
        </introduction>


        <task xml:id="ex-pull-request-b-i-a" label="ex-pull-request-b-i-a">
          <statement>
            <p>
              Base Repository
            </p>
          </statement>
          <response />
        </task>


        <task xml:id="ex-pull-request-b-i-b" label="ex-pull-request-b-i-b">
          <statement>
            <p>
              Head Repository
            </p>
          </statement>
          <response />
        </task>
      </task>
      -->
      <task xml:id="ex-pull-request-b-ii" label="ex-pull-request-b-ii">
        <statement>
          <p>
            The terms “Base Repository” and “Head Repository” in are generic labels that GitHub uses for the two repositories that are involved in the pull request.
            Often, and in our case, these two repositories will be your origin repository and the project's upstream repository.
            Match the right hand column with either head repository or base repository to indicate which term refers to your origin and which refers to the upstream.
          </p>
        </statement>
        <matches> <match>
        <premise>
        <c>head repository</c></premise> <response>your origin repository</response> </match> <match>
        <premise>
        <c>base repository</c></premise> <response>the upstream</response> </match>  </matches>
        <hint>
          <p>
            The base is where you want your changes merged into/the repository you created your fork from.
            The head is where your changes are being pulled from/the branch you pushed to your GitHub account from your local machine.
          </p>
        </hint>
      </task>


      <task xml:id="ex-pull-request-b-iii" label="ex-pull-request-b-iii">
        <statement>
          <p>
            The information in the gray bar also indicates the branches involved in the pull request.
            It uses the generic labels of <em>base</em> and <em>compare</em> for these branches.
            Match the right hand column with either base branch or compare branch to indicate which is “pulled from” or “merged into”.
          </p>
        </statement>
        <matches> <match>
        <premise>
        <c>base branch</c></premise> <response>merged into</response> </match> <match>
        <premise>
        <c>compare branch</c></premise> <response>pulled from</response> </match>  </matches>
        <hint>
          <p>
            The base is where you want your changes merged into.
            The head is where your changes are being pulled from.
          </p>
        </hint>
      </task>
    </task>
  </exercise>

  <exercise xml:id="ex-pull-request-finish" label="ex-pull-request-finish">
    <statement>
      <p>
        To finish making your pull request (PR) you will need to add some additional details.
        Complete the following steps in your browser to create your PR.
        You do not need to give individual answers for each step here.
        The details you provide will become a part of your pull request and your instructor will see them on GitHub.
      </p>
    </statement>


    <task xml:id="ex-pull-request-finish-a" label="ex-pull-request-finish-a">
      <statement>
        <p>
          Give your PR a descriptive title - a similar idea to using meaningful commit messages.
        </p>
      </statement>
    </task>


    <task xml:id="ex-pull-request-finish-b" label="ex-pull-request-finish-b">
      <statement>
        <p>
          Replace the <c>&lt;add description&gt;</c> in the body of the PR with a longer description of your changes.
        </p>
      </statement>
    </task>


    <task xml:id="ex-pull-request-finish-c" label="ex-pull-request-finish-c">
      <statement>
        <p>
          If a PR fixes an issue, which yours does, then you should include a line in the body of the PR that says exactly: <c>Fixes #123</c> or exactly: <c>Closes #123</c>.
        </p>

        <p>
          When a PR with one of these lines is merged into the project the listed ticket from the issue tracker (e.g.
          123 in this example) will be closed automatically.
          Including these lines is very helpful to the project maintainers because then they do not have to remember to go close the associated ticket each time they merge a pull request.
        </p>

        <p>
          Add a line to the body of the PR that will close the issue that you fixed.
        </p>

        <p>
          The #123 part of the line should automatically become a link to the issue.
          If it does not, check to be sure you have entered the information exactly as shown above.
        </p>
      </statement>
    </task>


    <task xml:id="ex-pull-request-finish-d" label="ex-pull-request-finish-d">
      <statement>
        <p>
          Check the status of your PR and confirm that it can be merged automatically.
          The status will be listed at the top of the GitHub page below the image from <xref ref="ex-pull-request-b"/>
        </p>
      </statement>
    </task>


    <task xml:id="ex-pull-request-finish-e" label="ex-pull-request-finish-e">
      <statement>
        <p>
          Click the green button to create the Pull Request.
        </p>

        <p>
          <image source="images/ch-upstreaming-changes/create-pull-request.png" width="50%">
            <description>
              GitHub create pull request button image.
            </description>
          </image>
        </p>
      </statement>
    </task>
  </exercise>

  <exercise xml:id="ex-pull-request-find" label="ex-pull-request-find">
    <statement>
      <p>
        Go to the upstream repository on GitHub and open the “Pull Requests” tab:
      </p>

      <p>
        <image source="images/ch-upstreaming-changes/pull-requests-tab.png" width="30%">
          <description>
            GitHub pull requests tab image.
          </description>
        </image>
      </p>

      <p>
        Find your Pull Request and give a link to it here.
      </p>

      <p>
        <var width="55" />
      </p>
    </statement>
    <setup> <var> <condition string='^https://github.com/(?!(FarmData2/FarmData2|DickinsonCollege/FarmData2).)/pulls[0-9]+$'> <!-- THE REGEX BELOW IS FOR A PULL REQUEST BUT IT NEEDS TO BE IN THE UPSTREAM REPO - NOT SURE IF THE ABOVE WORKS PROPERLY ^https://github.com/.+/pulls/[0-9]+$ -->
    <feedback>
      <p>
        Thank you.
      </p>
    </feedback>
    </condition> <condition string=".*">

    <feedback>
      <p>
        The upstream repository is the repository you forked from.
        Double check that you aren't in your origin repository.
      </p>
    </feedback>
    </condition> </var> </setup>

    <hint>
      <p>
        In GitHub look at the top left side of the browser window.
        If it says "forked from" with a link it means you are in your fork instead of the upstream repository.
        Click that link to go to the upstream repository.
      </p>
    </hint>
  </exercise>

  <exercise xml:id="ex-pull-request-files" label="ex-pull-request-files">
    <statement>
      <p>
        On your pull request page there will be “Files Changed” tab:
      </p>

      <p>
        <image source="images/ch-upstreaming-changes/files-changed-tab.png" width="30%">
          <description>
            GitHub pull requests tab image.
          </description>
        </image>
      </p>

      <p>
        Open that tab.
        At the bottom of that page will be a diff that shows the changes that you have made.
        This diff shows both the upstream version of the code and your version of the code.
        It also indicates the changes you have made.
        The project maintainers will often use this diff to see the details of what you have changed.
      </p>
      <!--
      <task xml:id="ex-pull-request-files-a" label="ex-pull-request-files-a">
        -->
        <p>
          Which of the following describes how the diff indicates the changes that you made?
        </p>
      </statement>


      <choices randomize="yes">
        <choice correct="yes">
          <statement>
            <p>
              The line(s) which contains the change(s) appears twice.
              Once in red with the old version and once in green with the new version.
              The change(s) appear in both in bold.
            </p>
          </statement>

          <feedback>
            <p>
              Correct! You can see the changes by comparing the red and green lines.
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              The line(s) which contains the change(s) appears once in red.
            </p>
          </statement>

          <feedback>
            <p>
              The red only shows what is being deleted.
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              The line(s) which contains the change(s) appears once in green.
            </p>
          </statement>

          <feedback>
            <p>
              The green only shows what is being inserted.
            </p>
          </feedback>
        </choice>

        <choice>
          <statement>
            <p>
              Only the changed word(s) appear with the old in strike through and the new next to it.
            </p>
          </statement>

          <feedback>
            <p>
              GitHub doesn't use strike through to indicate changes.
            </p>
          </feedback>
        </choice>
      </choices>

      <hint>
        <p>
          The diff command will color code the changes.
          Lines that are changed will show both the original line and the updated line.
        </p>
      </hint>
    </exercise>
    </exercises>
  </section>
