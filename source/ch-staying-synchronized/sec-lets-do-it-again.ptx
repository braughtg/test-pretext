<?xml version="1.0" encoding="UTF-8"?>

<section xml:id="topic-lets-do-it-again" xmlns:xi="http://www.w3.org/2001/XInclude" >
  <title>Let's Do it Again</title>

  <introduction>
    <p>
      You’ve learned a lot about Git and GitHub.
      But, to become proficient with these tools takes a lot of repetition and practice.
      This section asks you to go through the process of finding an issue, fixing it and creating a pull request again.
      This is good practice but what you will be asked to do has also been carefully planned to set us up for the next chapter too!
    </p>
  </introduction>


  <subsection>
    <title>Overview of Fixing an Issue</title>

    <exercises>
    <title/>
    <introduction>
      <p>
        Now you will go through the process of fixing the issue and making a pull request.
        You will use the same process that you used for your “Round1” issue earlier.
        That process had a number of steps.
      </p>
    </introduction>

    <exercise xml:id="ex-fixing-issue-ordering" label="ex-fixing-issue-ordering">
      <statement>
        <p>
          The steps are listed below in a jumbled-up order, determine the proper order.
        </p>
      </statement>
      <blocks randomize="yes"> <block>
      <p>
        Claim an issue
      </p>
      </block> <block>

      <p>
        Create a new feature branch
      </p>
      </block> <block>

      <p>
        Switch to the feature branch
      </p>
      </block> <block>

      <p>
        Edit the local files
      </p>
      </block><block>

      <p>
        Stage your changes
      </p>
      </block> <block>

      <p>
        Commit changes to the feature branch
      </p>
      </block> <block>

      <p>
        Push the feature branch to your origin
      </p>
      </block> <block>

      <p>
        Make a pull request to the upstream
      </p>
      </block> </blocks>

      <hint>
        <p>
          Think about the full process that you've completed thus far starting from claiming the issue to work on it and getting it merged into the upstream repository.
        </p>
      </hint>
    </exercise>
    </exercises>
  </subsection>


  <subsection>
    <title>Claim Round 2 Issue</title>

    <exercises>
    <title />
    <exercise xml:id="ex-claim-issue" label="ex-claim-issue">
      <introduction>
        <p>
          The issue tracker in the <em>upstream FarmData2 repository</em> being used for these tasks.
        </p>
      </introduction>

      <statement>
        <p>
          Use the label dropdown in the issue tracker to filter for issues labeled with the “Round2” tag.
          How many issues are tagged with this label?
        </p>
      </statement>


      <choices>
        <choice correct="yes">
          <statement>
            <p>
              4
            </p>
          </statement>
        </choice>

        <choice>
          <statement>
            <p>
              6
            </p>
          </statement>
        </choice>

        <choice>
          <statement>
            <p>
              35
            </p>
          </statement>
        </choice>

        <choice>
          <statement>
            <p>
              40
            </p>
          </statement>
        </choice>
      </choices>

      <hint>
        <p>
          Make sure you have the Round2 tag selected in the issue tracker.
        </p>
      </hint>
    </exercise>

    <exercise xml:id="ex-claim-issue-b" label="ex-claim-issue-b">
      <statement>
        <p>
          Clearly there are not enough “Round2” issues for everyone to have their own as was the case with the “Round1” issues.
          So, this time there will be multiple people working on the same issue.
        </p>

        <p>
          Pick one of the “Round2” issues to work on and make a comment on it to indicate your interest in working on it.
          Note it is not necessary that the issue be assigned to you this time.
          Try to spread out across the issues so that multiple people have commented that they are working on each one.
          Type in the number of the issue you chose.
          Do not include the #.
        </p>

        <p>
          <var width="45" />
        </p>
      </statement>
      <setup> <var> <condition string="^36|37|38|39$">
      <feedback>
        <p>
          Thank you for selecting an issue.
        </p>
      </feedback>
      </condition> <condition string=".*">

      <feedback>
        <p>
          Make sure you have only typed in the issue number (25 for example) and that it is a Round2 issue.
        </p>
      </feedback>
      </condition> </var> </setup>
    </exercise>
    </exercises>
  </subsection>


  <subsection>
    <title>Fix the Issue</title>

    <exercises>
    <title />
    <exercise xml:id="ex-fixing-issue-process" label="ex-fixing-issue-process">
      <task xml:id="ex-fixing-issue-process-a" label="ex-fixing-issue-process-a">
        <statement>
          <p>
            Which of the following Git commands did you use for the steps indicated below.
            The command references that you created in <xref ref="ex-git-commands-summary-synching"/> may also come in handy here.
          </p>
        </statement>

        <feedback>
          <p>
            Review the git commands by looking at the git command summary in this and previous chapters.
          </p>
        </feedback>
        <matches> <match>
        <premise>
        <c>git branch &lt;branch&gt;</c></premise> <response>Create feature branch</response> </match> <match>
        <premise>
        <c>git switch &lt;branch&gt;</c></premise> <response>Switch to feature branch</response> </match> <match>
        <premise>
        <c>git stage &lt;file&gt;</c></premise> <response>Add changes to stage</response> </match> <match>
        <premise>
        <c>git commit -m "message"</c></premise> <response>Commit changes</response> </match> <match>
        <premise>
        <c>git push</c></premise> <response>Push feature branch</response> </match> </matches>
        <hint>
          <p>
            Note that the tasks listed are in approximately the same order as they appear in the sections of this chapter.
          </p>
        </hint>
      </task>


      <task xml:id="ex-fixing-issue-process-b" label="ex-fixing-issue-process-b">
        <statement>
          <p>
            Which of the following would be the best name for a feature branch for issue #37 that adds a link to the NSF award in the Acknowledgements section?
          </p>
        </statement>


        <choices randomize="yes">
          <choice>
            <statement>
              <p>
                issue37
              </p>
            </statement>

            <feedback>
              <p>
                This branch name doesn't provide enough information.
                What is issue 37?
              </p>
            </feedback>
          </choice>

          <choice>
            <statement>
              <p>
                adding-link
              </p>
            </statement>

            <feedback>
              <p>
                This branch name is too generic.
              </p>
            </feedback>
          </choice>

          <choice correct="yes">
            <statement>
              <p>
                adding-nsf-link-acknowledgement
              </p>
            </statement>

            <feedback>
              <p>
                Correct! This branch name describes the work to be done in the branch.
              </p>
            </feedback>
          </choice>

          <choice>
            <statement>
              <p>
                nsf-acknowledgement
              </p>
            </statement>

            <feedback>
              <p>
                This branch name doesn't specify what is being done with regard to the NSF acknowledgement.
              </p>
            </feedback>
          </choice>
        </choices>

        <hint>
          <p>
            Refer back to the section on creating branches <xref ref="topic-creating-a-feature-branch"/> for information on branch names.
          </p>
        </hint>
      </task>


      <task xml:id="ex-fixing-issue-process-c" label="ex-fixing-issue-process-c">
        <statement>
          <p>
            Which of the following would be the best commit message for the fix for issue 38 that adds a link to the GNOME Community Engagement Challenge in the acknowledgements?
          </p>
        </statement>


        <choices randomize="yes">
          <choice correct="yes">
            <statement>
              <p>
                Added the URL for GNOME to the acknowledgements section of the REAMDE file.
              </p>
            </statement>

            <feedback>
              <p>
                Correct! This commit message briefly but completing describes the change made.
              </p>
            </feedback>
          </choice>

          <choice>
            <statement>
              <p>
                Added URL.
              </p>
            </statement>

            <feedback>
              <p>
                This commit message doesn't provide enough information about the URL added.
              </p>
            </feedback>
          </choice>

          <choice>
            <statement>
              <p>
                Updated README.
              </p>
            </statement>

            <feedback>
              <p>
                This commit message doesn't provide enough information about what has been changed in the README file.
              </p>
            </feedback>
          </choice>

          <choice>
            <statement>
              <p>
                Fixed typo.
              </p>
            </statement>

            <feedback>
              <p>
                This commit message is too generic and does not describe the change for this issue.
              </p>
            </feedback>
          </choice>
        </choices>

        <hint>
          <p>
            Refer back to the section on creating branches <xref ref="topic-committing-to-your-local-repository"/> for information on commit messages.
          </p>
        </hint>
      </task>
    </exercise>
    </exercises>
  </subsection>


  <subsection>
    <title>Upstream the Changes</title>

    <exercises>
    <title />
    <exercise xml:id="ex-pull-request-info-b" label="ex-pull-request-info-b">
      <statement>
        <p>
          Enter the full URL of your PR below.
        </p>

        <p>
          <var width="45" />
        </p>
      </statement>
      <setup> <var> <condition string="^https://github.com/.+/pulls/[0-9]+$">
      <feedback>
        <p>
          Thank you for supplying your pull request URL.
        </p>
      </feedback>
      </condition> <condition string=".*">

      <feedback>
        <p>
          Make sure you have the complete URL of the PR starting with https and ending with the number of your pull request.
        </p>
      </feedback>
      </condition> </var> </setup>
    </exercise>

    <exercise xml:id="ex-pull-request-info-c" label="ex-pull-request-info-c">
      <statement>
        <p>
          Look at the base and head repositories listed in the PR.
          Which of the following statements are true?
        </p>
      </statement>


      <choices>
        <choice correct="yes">
          <statement>
            <p>
              The base repository is the upstream repository.
            </p>
          </statement>
        </choice>

        <choice>
          <statement>
            <p>
              The base repository is my origin repository.
            </p>
          </statement>
        </choice>

        <choice>
          <statement>
            <p>
              The base repository is my local repository.
            </p>
          </statement>
        </choice>

        <choice>
          <statement>
            <p>
              The head repository is the upstream repository.
            </p>
          </statement>
        </choice>

        <choice correct="yes">
          <statement>
            <p>
              The head repository is my origin repository.
            </p>
          </statement>
        </choice>

        <choice>
          <statement>
            <p>
              The head repository is my local repository.
            </p>
          </statement>
        </choice>
      </choices>

      <hint>
        <p>
          In order for your work to be merged, it must be on GitHub.
          Think about where you pushed your changes to (head) and where you want them merged int (base).
        </p>
      </hint>
    </exercise>

    <exercise xml:id="ex-pull-request-info-e" label="ex-pull-request-info-e">
      <statement>
        <p>
          Match the term to the appropriate branch.
        </p>
      </statement>

      <feedback>
        <p>
          Try again.
        </p>
      </feedback>
      <matches> <match>
      <premise>
      <c>base branch</c></premise> <response>upstream <c>main</c> branch</response> </match> <match>
      <premise>
      <c>compare branch</c></premise> <response><c>feature branch</c> in your origin repo</response> </match> </matches>
      <hint>
        <p>
          Think about where you want to merge into (base) and what is being merged (compare).
        </p>
      </hint>
    </exercise>

    <exercise xml:id="ex-pull-request-info-g" label="ex-pull-request-info-g">
      <statement>
        <p>
          What is the line number of the README.md file that you changed.
          Hint: use the diff you saw in the prior chapter <xref ref="ex-pull-request-files"/>.
        </p>

        <p>
          <var width="45" />
        </p>
      </statement>
      <setup> <var> <condition string="[0-9]+">
      <feedback>
        <p>
          Thank you.
        </p>
      </feedback>
      </condition> <condition string=".*">

      <feedback>
        <p>
          Make sure you are only putting the line number that changed in the README file.
        </p>
      </feedback>
      </condition> </var> </setup>
    </exercise>

    <exercise xml:id="ex-pull-request-problem" label="ex-pull-request-problem">
      <statement>
        <p>
          Because there were a limited number of “Round2” issues, other students will have been simultaneously making changes to fix the same lines in the same files.
          Which of the following describe how this might create a problem in the future.
        </p>
      </statement>


      <choices>
        <choice>
          <statement>
            <p>
              
            </p>
          </statement>
        </choice>
      </choices>

      <hint>
        <p>
          Look at the lines numbers again using the diff command.
        </p>
      </hint>
    </exercise>
    </exercises>
  </subsection>
</section>
